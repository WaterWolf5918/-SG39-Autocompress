plugins {
    id 'java'
}
compileJava {options.encoding = 'UTF-8'}   
group = 'tk.waterwolf'
version = '2.0.1'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
}


repositories {
    
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}



processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


task finalize (type: Exec){
    workingDir '/test-server/'
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd','/c'
    } else {
        commandLine 'sh', '/c'
    }
    doLast {
       println('Copying File From gradle to test server')
       copy(){
            from '/build/libs/SG30DLL-2.0.1.jar'
            into '/test-server/plugins'
       }
       println('Copied')
       println('$workingDir')
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            exec {
                workingDir '/test-server'
                executable 'test.bat'
            }
        } else {
            exec {
                executable 'test.sh'
            }
        }

        
    }
}

build.finalizedBy(finalize)